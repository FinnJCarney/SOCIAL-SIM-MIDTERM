//%GenSrc:1:a6ayg9qnp0ybW13ptOoT8A
//%CodeKey:DmDW5Lfbhk6P94u/YBl72g
/*
 * This code was generated by InstinctAI
 *
 *         DO NOT MODIFY BY HAND
 *     THIS FILE WILL BE REGENERATED
 *
 *      DO NOT REMOVE/EDIT COMMENTS
 *
 * If you do need to modify this file, note that it is a partial class.
 * See https://msdn.microsoft.com/en-us/library/wa80x488.aspx
 * You can edit the file Person.cs
 */

namespace instinctai.usr.behaviours
{
    using System.Collections;
    using UnityEngine;
    using com.kupio.instinctai;
#if UNITY_EDITOR
    using UnityEditor;
    using com.kupio.instinctai.live;
#endif

    public partial class Person : MonoBehaviour
#if UNITY_EDITOR
        , LiveTree
#endif
    {
        private IEnumerator _state = null;
        private int _jmp;
        private bool valid = true;

#if UNITY_EDITOR
    private LiveUpdate _live;
    private int _liveHandle;
#endif

        void Update()
        {
            if (valid) {
                if (_state == null || _state.MoveNext() == false) {
                    _state = StateGen();
                    _state.MoveNext();
                }
            }
        }
        private IEnumerator StateGen()
        {
            int node = 0;
            NodeVal ret = NodeVal.Error;
            _jmp = -1;
            float f1 = 0.0f;
            int n0c = -1;
            int n14c = -1;
            int n15c = -1;
            int n16c = -1;
            int n1c = -1;
            int n2c = -1;
            int n36c = -1;
            int n3c = -1;
            int n42c = -1;
            int n43c = -1;
            int n4c = -1;
            int n5c = -1;
            int n6c = -1;
            NodeVal n1_1r = NodeVal.Invalid;
            NodeVal n15_1r = NodeVal.Invalid;
            NodeVal n16_1r = NodeVal.Invalid;
            NodeVal n2_1r = NodeVal.Invalid;
            NodeVal n3_1r = NodeVal.Invalid;
            NodeVal n36_1r = NodeVal.Invalid;
            NodeVal n4_1r = NodeVal.Invalid;
            NodeVal n42_1r = NodeVal.Invalid;
            NodeVal n43_1r = NodeVal.Invalid;
            NodeVal n5_1r = NodeVal.Invalid;
            NodeVal n6_1r = NodeVal.Invalid;
            Vector3 v1 = Vector3.zero;

            if (!valid) {
                throw new BehaviourTreeException("Behaviour tree will not run. The GameObject has missing required components.");
            }
            do {
                switch (node) {
                    case 0:

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(2, _liveHandle, NodeVal.Running, false, true);
                        #endif
                        n0c = 1;
                        node = 1;
                        break;
                    case 50:

                        if (_jmp >= 0) {
                            node = _jmp;
                            _jmp = -1;
                            continue;
                        }
                        if(ret != NodeVal.Success) {
                            if (++n0c > 7) {
                                n0c = 1;
                                node = 0;
                                yield return null;
                            } else {
                                node = n0c;
                            }
                        } else {
                            n0c = 1;
                            node = 0;
                            yield return null;
                        }

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(2, _liveHandle, ret, true, false);
                        #endif
                        break;
                    case 1:

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(64, _liveHandle, NodeVal.Running, false, false);
                        #endif
                        n1c = 8;
                        node = 8;
                        n1_1r = NodeVal.Success;
                        break;
                    case 51:

                        n1_1r = (NodeVal)System.Math.Max((int)n1_1r, (int)ret);
                        if (ret == NodeVal.Success && n1c < 12) {
                            node = ++n1c;
                        } else {
                            n1c = 8;
                            node = 50;
                            ret = n1_1r;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(64, _liveHandle, ret, false, false);
                        #endif

                        }
                        break;
                    case 2:

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(68, _liveHandle, NodeVal.Running, false, false);
                        #endif
                        n2c = 13;
                        node = 13;
                        n2_1r = NodeVal.Success;
                        break;
                    case 52:

                        n2_1r = (NodeVal)System.Math.Max((int)n2_1r, (int)ret);
                        if (ret == NodeVal.Success && n2c < 14) {
                            node = ++n2c;
                        } else {
                            n2c = 13;
                            node = 50;
                            ret = n2_1r;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(68, _liveHandle, ret, false, false);
                        #endif

                        }
                        break;
                    case 3:

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(72, _liveHandle, NodeVal.Running, false, false);
                        #endif
                        n3c = 23;
                        node = 23;
                        n3_1r = NodeVal.Success;
                        break;
                    case 53:

                        n3_1r = (NodeVal)System.Math.Max((int)n3_1r, (int)ret);
                        if (ret == NodeVal.Success && n3c < 27) {
                            node = ++n3c;
                        } else {
                            n3c = 23;
                            node = 50;
                            ret = n3_1r;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(72, _liveHandle, ret, false, false);
                        #endif

                        }
                        break;
                    case 4:

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(57, _liveHandle, NodeVal.Running, false, false);
                        #endif
                        n4c = 28;
                        node = 28;
                        n4_1r = NodeVal.Success;
                        break;
                    case 54:

                        n4_1r = (NodeVal)System.Math.Max((int)n4_1r, (int)ret);
                        if (ret == NodeVal.Success && n4c < 33) {
                            node = ++n4c;
                        } else {
                            n4c = 28;
                            node = 50;
                            ret = n4_1r;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(57, _liveHandle, ret, false, false);
                        #endif

                        }
                        break;
                    case 5:

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(50, _liveHandle, NodeVal.Running, false, false);
                        #endif
                        n5c = 34;
                        node = 34;
                        n5_1r = NodeVal.Success;
                        break;
                    case 55:

                        n5_1r = (NodeVal)System.Math.Max((int)n5_1r, (int)ret);
                        if (ret == NodeVal.Success && n5c < 36) {
                            node = ++n5c;
                        } else {
                            n5c = 34;
                            node = 50;
                            ret = n5_1r;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(50, _liveHandle, ret, false, false);
                        #endif

                        }
                        break;
                    case 6:

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(51, _liveHandle, NodeVal.Running, false, false);
                        #endif
                        n6c = 39;
                        node = 39;
                        n6_1r = NodeVal.Success;
                        break;
                    case 56:

                        n6_1r = (NodeVal)System.Math.Max((int)n6_1r, (int)ret);
                        if (ret == NodeVal.Success && n6c < 41) {
                            node = ++n6c;
                        } else {
                            n6c = 39;
                            node = 50;
                            ret = n6_1r;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(51, _liveHandle, ret, false, false);
                        #endif

                        }
                        break;
                    case 7:


                        do
                        {
                            ret = (this.LightRemotePos());
                            if (ret == NodeVal.Running) {

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(61, _liveHandle, NodeVal.Running, true, false);
                        #endif
                                yield return null;
                            } else {
                                node = 50;
                                break;
                            }
                        } while (true);

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(61, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 8:

                        ret = (this.hasRemote)? NodeVal.Success : NodeVal.Fail;
                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(19, _liveHandle, ret, false, false);
                        #endif
                        node = 51;
                        break;
                    case 9:


                        f1 = Time.time;

                        do
                        {
                                ret = ((Time.time - f1) > 1f)? NodeVal.Success : NodeVal.Running;
                            if (ret == NodeVal.Running) {

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(20, _liveHandle, NodeVal.Running, true, false);
                        #endif
                                yield return null;
                            } else {
                                node = 51;
                                break;
                            }
                        } while (true);

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(20, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 10:


                        do
                        {
                            ret = (this.ChangeAC());
                            if (ret == NodeVal.Running) {

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(8, _liveHandle, NodeVal.Running, true, false);
                        #endif
                                yield return null;
                            } else {
                                node = 51;
                                break;
                            }
                        } while (true);

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(8, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 11:


                        f1 = Time.time;

                        do
                        {
                                ret = ((Time.time - f1) > 1f)? NodeVal.Success : NodeVal.Running;
                            if (ret == NodeVal.Running) {

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(22, _liveHandle, NodeVal.Running, true, false);
                        #endif
                                yield return null;
                            } else {
                                node = 51;
                                break;
                            }
                        } while (true);

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(22, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 12:


                        do
                        {
                            ret = (this.ThrowRemote());
                            if (ret == NodeVal.Running) {

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(21, _liveHandle, NodeVal.Running, true, false);
                        #endif
                                yield return null;
                            } else {
                                node = 51;
                                break;
                            }
                        } while (true);

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(21, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 13:

                        ret = (!this.isACGood())? NodeVal.Success : NodeVal.Fail;
                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(65, _liveHandle, ret, false, false);
                        #endif
                        node = 52;
                        break;
                    case 14:

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(73, _liveHandle, NodeVal.Running, false, false);
                        #endif
                        n14c = 15;
                        node = 15;
                        break;
                    case 64:

                        if(ret != NodeVal.Success) {
                            if (++n14c > 16) {
                                n14c = 15;
                                node = 52;
                            } else {
                                node = n14c;
                            }
                        } else {
                            n14c = 15;
                            node = 52;
                        }

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(73, _liveHandle, ret, false, false);
                        #endif
                        break;
                    case 15:

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(74, _liveHandle, NodeVal.Running, false, false);
                        #endif
                        n15c = 17;
                        node = 17;
                        n15_1r = NodeVal.Success;
                        break;
                    case 65:

                        n15_1r = (NodeVal)System.Math.Max((int)n15_1r, (int)ret);
                        if (ret == NodeVal.Success && n15c < 19) {
                            node = ++n15c;
                        } else {
                            n15c = 17;
                            node = 64;
                            ret = n15_1r;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(74, _liveHandle, ret, false, false);
                        #endif

                        }
                        break;
                    case 16:

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(75, _liveHandle, NodeVal.Running, false, false);
                        #endif
                        n16c = 20;
                        node = 20;
                        n16_1r = NodeVal.Success;
                        break;
                    case 66:

                        n16_1r = (NodeVal)System.Math.Max((int)n16_1r, (int)ret);
                        if (ret == NodeVal.Success && n16c < 22) {
                            node = ++n16c;
                        } else {
                            n16c = 20;
                            node = 64;
                            ret = n16_1r;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(75, _liveHandle, ret, false, false);
                        #endif

                        }
                        break;
                    case 17:

                        ret = (this.IsLightOn())? NodeVal.Success : NodeVal.Fail;
                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(77, _liveHandle, ret, false, false);
                        #endif
                        node = 65;
                        break;
                    case 18:

                        ret = ((transform.position - this.RemoteLoc).sqrMagnitude <= (9f))? NodeVal.Success : NodeVal.Fail;
                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(78, _liveHandle, ret, false, false);
                        #endif
                        node = 65;
                        break;
                    case 19:


                        do
                        {
                            ret = (this.PickUpRemote());
                            if (ret == NodeVal.Running) {

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(76, _liveHandle, NodeVal.Running, true, false);
                        #endif
                                yield return null;
                            } else {
                                node = 65;
                                break;
                            }
                        } while (true);

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(76, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 20:

                        ret = (!this.IsLightOn())? NodeVal.Success : NodeVal.Fail;
                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(79, _liveHandle, ret, false, false);
                        #endif
                        node = 66;
                        break;
                    case 21:

                        ret = ((transform.position - this.RemoteLoc).sqrMagnitude <= (1f))? NodeVal.Success : NodeVal.Fail;
                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(80, _liveHandle, ret, false, false);
                        #endif
                        node = 66;
                        break;
                    case 22:


                        do
                        {
                            ret = (this.PickUpRemote());
                            if (ret == NodeVal.Running) {

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(81, _liveHandle, NodeVal.Running, true, false);
                        #endif
                                yield return null;
                            } else {
                                node = 66;
                                break;
                            }
                        } while (true);

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(81, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 23:

                        ret = (this.isACGood())? NodeVal.Success : NodeVal.Fail;
                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(41, _liveHandle, ret, false, false);
                        #endif
                        node = 53;
                        break;
                    case 24:

                        ret = (!this.IsLightOn())? NodeVal.Success : NodeVal.Fail;
                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(40, _liveHandle, ret, false, false);
                        #endif
                        node = 53;
                        break;
                    case 25:

                        ret = (!this.AreYouInBed())? NodeVal.Success : NodeVal.Fail;
                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(15, _liveHandle, ret, false, false);
                        #endif
                        node = 53;
                        break;
                    case 26:


                        do
                        {
                            ret = (this.FindBed());
                            if (ret == NodeVal.Running) {

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(16, _liveHandle, NodeVal.Running, true, false);
                        #endif
                                yield return null;
                            } else {
                                node = 53;
                                break;
                            }
                        } while (true);

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(16, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 27:


                            v1 = this.TargetLoc;
                            transform.position = Vector3.MoveTowards(transform.position, v1, 2f * Time.deltaTime);
                            ret = (transform.position == v1)? NodeVal.Success : NodeVal.Running;
                        node = 53;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(63, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 28:

                        ret = (this.isACGood())? NodeVal.Success : NodeVal.Fail;
                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(56, _liveHandle, ret, false, false);
                        #endif
                        node = 54;
                        break;
                    case 29:

                        ret = (this.IsLightOn())? NodeVal.Success : NodeVal.Fail;
                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(55, _liveHandle, ret, false, false);
                        #endif
                        node = 54;
                        break;
                    case 30:


                        do
                        {
                            ret = (this.FindLight());
                            if (ret == NodeVal.Running) {

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(54, _liveHandle, NodeVal.Running, true, false);
                        #endif
                                yield return null;
                            } else {
                                node = 54;
                                break;
                            }
                        } while (true);

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(54, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 31:


                            v1 = this.TargetLoc;
                            transform.position = Vector3.MoveTowards(transform.position, v1, 2f * Time.deltaTime);
                            ret = (transform.position == v1)? NodeVal.Success : NodeVal.Running;
                        node = 54;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(45, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 32:

                        ret = ((transform.position - this.LightLoc).sqrMagnitude <= (1f))? NodeVal.Success : NodeVal.Fail;
                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(43, _liveHandle, ret, false, false);
                        #endif
                        node = 54;
                        break;
                    case 33:


                        do
                        {
                            ret = (this.TurnOffLight());
                            if (ret == NodeVal.Running) {

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(44, _liveHandle, NodeVal.Running, true, false);
                        #endif
                                yield return null;
                            } else {
                                node = 54;
                                break;
                            }
                        } while (true);

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(44, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 34:

                        ret = (!this.isACGood())? NodeVal.Success : NodeVal.Fail;
                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(49, _liveHandle, ret, false, false);
                        #endif
                        node = 55;
                        break;
                    case 35:

                        ret = (this.IsLightOn())? NodeVal.Success : NodeVal.Fail;
                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(48, _liveHandle, ret, false, false);
                        #endif
                        node = 55;
                        break;
                    case 36:

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(60, _liveHandle, NodeVal.Running, false, false);
                        #endif
                        n36c = 37;
                        node = 37;
                        n36_1r = NodeVal.Success;
                        break;
                    case 86:

                        n36_1r = (NodeVal)System.Math.Max((int)n36_1r, (int)ret);
                        if (ret == NodeVal.Success && n36c < 38) {
                            node = ++n36c;
                        } else {
                            n36c = 37;
                            node = 55;
                            ret = n36_1r;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(60, _liveHandle, ret, false, false);
                        #endif

                        }
                        break;
                    case 37:


                        ret = (this.Search());
                        node = 86;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(66, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 38:


                        do
                        {
                                v1 = this.SearchDir;
                            transform.position = Vector3.MoveTowards(transform.position, v1, 2f * Time.deltaTime);
                            ret = (transform.position == v1)? NodeVal.Success : NodeVal.Running;
                            if (ret == NodeVal.Running) {

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(82, _liveHandle, NodeVal.Running, true, false);
                        #endif
                                yield return null;
                            } else {
                                node = 86;
                                break;
                            }
                        } while (true);

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(82, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 39:

                        ret = (!this.isACGood())? NodeVal.Success : NodeVal.Fail;
                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(53, _liveHandle, ret, false, false);
                        #endif
                        node = 56;
                        break;
                    case 40:

                        ret = (!this.IsLightOn())? NodeVal.Success : NodeVal.Fail;
                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(52, _liveHandle, ret, false, false);
                        #endif
                        node = 56;
                        break;
                    case 41:

                            f1 = UnityEngine.Random.Range(0.0f, 1.0f);

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(62, _liveHandle, NodeVal.Running, false, false);
                        #endif

                        if (f1 <= 0.8f) {
                            node = 42;
                        }
                        else {
                            node = 43;
                        }
                        break;
                    case 91:

                        node = 56;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(62, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 42:

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(69, _liveHandle, NodeVal.Running, false, false);
                        #endif
                        n42c = 44;
                        node = 44;
                        n42_1r = NodeVal.Success;
                        break;
                    case 92:

                        n42_1r = (NodeVal)System.Math.Max((int)n42_1r, (int)ret);
                        if (ret == NodeVal.Success && n42c < 45) {
                            node = ++n42c;
                        } else {
                            n42c = 44;
                            node = 91;
                            ret = n42_1r;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(69, _liveHandle, ret, false, false);
                        #endif

                        }
                        break;
                    case 43:

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(67, _liveHandle, NodeVal.Running, false, false);
                        #endif
                        n43c = 46;
                        node = 46;
                        n43_1r = NodeVal.Success;
                        break;
                    case 93:

                        n43_1r = (NodeVal)System.Math.Max((int)n43_1r, (int)ret);
                        if (ret == NodeVal.Success && n43c < 49) {
                            node = ++n43c;
                        } else {
                            n43c = 46;
                            node = 91;
                            ret = n43_1r;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(67, _liveHandle, ret, false, false);
                        #endif

                        }
                        break;
                    case 44:


                        ret = (this.Search());
                        node = 92;

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(70, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 45:


                        do
                        {
                                v1 = this.SearchDir;
                            transform.position = Vector3.MoveTowards(transform.position, v1, 2f * Time.deltaTime);
                            ret = (transform.position == v1)? NodeVal.Success : NodeVal.Running;
                            if (ret == NodeVal.Running) {

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(71, _liveHandle, NodeVal.Running, true, false);
                        #endif
                                yield return null;
                            } else {
                                node = 92;
                                break;
                            }
                        } while (true);

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(71, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 46:


                        f1 = Time.time;

                        do
                        {
                                ret = ((Time.time - f1) > 1f)? NodeVal.Success : NodeVal.Running;
                            if (ret == NodeVal.Running) {

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(58, _liveHandle, NodeVal.Running, true, false);
                        #endif
                                yield return null;
                            } else {
                                node = 93;
                                break;
                            }
                        } while (true);

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(58, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 47:


                        do
                        {
                            ret = (this.FindLight());
                            if (ret == NodeVal.Running) {

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(59, _liveHandle, NodeVal.Running, true, false);
                        #endif
                                yield return null;
                            } else {
                                node = 93;
                                break;
                            }
                        } while (true);

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(59, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 48:


                        do
                        {
                                v1 = this.TargetLoc;
                            transform.position = Vector3.MoveTowards(transform.position, v1, 2f * Time.deltaTime);
                            ret = (transform.position == v1)? NodeVal.Success : NodeVal.Running;
                            if (ret == NodeVal.Running) {

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(46, _liveHandle, NodeVal.Running, true, false);
                        #endif
                                yield return null;
                            } else {
                                node = 93;
                                break;
                            }
                        } while (true);

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(46, _liveHandle, ret, false, false);
                        #endif

                        break;
                    case 49:


                        do
                        {
                            ret = (this.TurnOnLight());
                            if (ret == NodeVal.Running) {

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(47, _liveHandle, NodeVal.Running, true, false);
                        #endif
                                yield return null;
                            } else {
                                node = 93;
                                break;
                            }
                        } while (true);

                        #if UNITY_EDITOR
                            if (_live != null) _live = _live.SetLiveValue(47, _liveHandle, ret, false, false);
                        #endif

                        break;
                }
            } while (node >= 0);
            yield return null;
        }
        public void ResetTree()
        {
            if (_jmp != 0)
            {
                _jmp = 0;
            }
        }
#if UNITY_EDITOR
        public bool SetLive(LiveUpdate live, string treeKey, string codeKey, int liveHandle, out bool codeMatch) {
            if (treeKey == "a6ayg9qnp0ybW13ptOoT8A") {
                _live = live;
                codeMatch = (codeKey == "DmDW5Lfbhk6P94u/YBl72g");
                if (codeMatch) {
                    _liveHandle = liveHandle;
                }
                return true;
            }
            codeMatch = false;
            return false;
        }
#endif

    }
}
